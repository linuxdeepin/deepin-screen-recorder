// Copyright (C) 2017 ~ 2018 Deepin Technology Co., Ltd.
// SPDX-FileCopyrightText: 2022 UnionTech Software Technology Co., Ltd.
//
// SPDX-License-Identifier: GPL-3.0-or-later

/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c DBusControlCenter -p dbuscontrolcenter com.deepin.dde.ControlCenter.xml
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "dbuscontrolcenter.h"
#include "../../dbus_name.h"

/*
 * Implementation of interface class DBusControlCenter
 */

const QString CONTROLCENTER_DBUS_NAME = CONTROL_CENTER_NAME;
const QString CONTROLCENTER_DBUS_PATH = CONTROL_CENTER_PATH;

DBusControlCenter::DBusControlCenter(QObject *parent)
    : QDBusAbstractInterface(CONTROLCENTER_DBUS_NAME,  CONTROLCENTER_DBUS_PATH,
                                                   staticInterfaceName(),  QDBusConnection::sessionBus(), parent)
{
    QDBusConnection::sessionBus().connect(this->service(), this->path(),
    "org.freedesktop.DBus.Properties", "PropertiesChanged","sa{sv}as",
                                          this, SLOT(__propertyChanged__(QDBusMessage)));
}

DBusControlCenter::~DBusControlCenter()
{
    QDBusConnection::sessionBus().disconnect(service(), path(),
    "org.freedesktop.DBus.Properties", "PropertiesChanged", "sa{sv}as",
                                             this, SLOT(propertyChanged(QDBusMessage)));
}

